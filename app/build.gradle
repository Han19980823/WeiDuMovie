apply plugin: 'com.android.application'
apply plugin: 'org.greenrobot.greendao'
android {
    signingConfigs {
        debug {
            storeFile file('D:\\movie.keystore')
            storePassword '123456'
            keyAlias = 'bw_movie'
            keyPassword '123456'
        }
    }
    android {
        buildTypes {
            release {
                minifyEnabled true;

            }
        }
    }


    android {
        defaultConfig {

            resConfigs "zh";

        }
    }
    compileSdkVersion 29
    buildToolsVersion "29.0.1"
    defaultConfig {
        applicationId "com.bw.movie"
        minSdkVersion 21
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8

    }
    //统一版本support，28。0。0
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")) {
                    details.useVersion '28.0.0'
                }
            }
        }
    }
    greendao {
        //指定数据库schema版本号，迁移等操作会用到
        schemaVersion 1
        //DaoSession、DaoMaster以及所有实体类的dao生成的目录,默认为你的entity所在的包名
        //daoPackage 包名
        daoPackage 'com.bw.movie.green.dao'
        //这就是我们上面说到的自定义生成数据库文件的目录了，可以将生成的文件放到我们的java	目录中，而不是build中，这样就不用额外的设置资源目录了
        //工程路径
        targetGenDir 'src/main/java'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.0'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.1.1'
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    //Rxjava2需要依赖
    implementation 'io.reactivex.rxjava2:rxjava:+'
    implementation 'io.reactivex.rxjava2:rxandroid:+'
    //微信
    implementation fileTree(include: ["*.jar"], dir: "libs")
    dependencies {
        implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    }
    //shi视频
    implementation 'fm.jiecao:jiecaovideoplayer:4.8.3'
    /*implementation 'fm.jiecao:jiecaovideoplayer:2.0'*/
    /* implementation 'fm.jiecao:jiecaovideoplayer:5.5'*/
    // EventBus
    implementation 'org.greenrobot:eventbus:3.1.1'
    //让retrofit支持Rxjava2
    implementation 'com.squareup.retrofit2:adapter-rxjava2:+'
    //黄油刀
    implementation "com.jakewharton:butterknife:10.0.0"
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'

    //okhttp3的依赖
    implementation 'com.squareup.okhttp3:okhttp:3.7.0'
    implementation 'com.squareup.okio:okio:1.12.0'

    //日志拦截器 需要使用日志拦截器的时候使用
    implementation 'com.squareup.okhttp3:logging-interceptor:3.4.1'
    implementation 'com.android.support:recyclerview-v7:29.0.0'

    //tablayout依赖 :
    implementation 'com.android.support:design:28.0.0'

    implementation 'com.xuezj.cardbanner:cardbanner:2.0.1'

    implementation 'com.github.stfalcon:frescoimageviewer:0.5.0'
    //Fresco,无论使用哪个模块的功能,都必须要添加的基础依赖
    implementation 'com.facebook.fresco:fresco:0.14.1'
    //XRecyclerView依赖
    implementation 'com.jcodecraeer:xrecyclerview:1.5.9'
    //下面的依赖根据需求,用到哪个模块,就导入对应的依赖即可.

    implementation 'com.amap.api:location:latest.integration'
    // 仅支持 WebP 静态图，需要添加

    implementation 'com.facebook.fresco:webpsupport:0.14.1'

    // 支持 GIF 动图，需要添加

    implementation 'com.facebook.fresco:animated-gif:0.14.1'

    // 支持 WebP 静态图及 WebP 动图，需要添加

    implementation 'com.facebook.fresco:animated-webp:0.14.1'

    implementation 'com.facebook.fresco:webpsupport:0.14.1'


    //Glide
    implementation 'com.dyhdyh.support:glide:1.0.0'
    // 在 API < 14 上的机器支持 WebP 时，需要添加

    implementation 'com.facebook.fresco:animated-base-support:0.14.1'
    //视频播放
    implementation 'fm.jiecao:jiecaovideoplayer:2.0'
    implementation 'com.iarcuschin:simpleratingbar:0.1.5'
    //修改生日
    implementation 'com.bigkoo:pickerview:2.0.8'
    //在项目中导入依赖
    implementation 'org.greenrobot:greendao:3.2.2'
    implementation 'org.greenrobot:greendao-generator:3.2.2'
    //微信
    implementation fileTree(include: ["*.jar"], dir: "libs")
    dependencies {
        implementation 'com.tencent.mm.opensdk:wechat-sdk-android-without-mta:+'
    }
    //修改生日
    implementation 'com.bigkoo:pickerview:2.0.8'
/////
    implementation 'com.scwang.smartrefresh:SmartRefreshLayout:1.0.4-4'
    //noinspection GradleCompatible
    implementation 'com.android.support:design:26.1.0'
//    compile "com.github.SibreiaDante:SiberiaDanteLib:v1.0.8"
    implementation 'de.hdodenhof:circleimageview:2.1.0'

    implementation 'me.codeboy.android:align-text-view:2.3.1'


}
